server:
  port: 1010

spring:
  application:
    name: order-service
  datasource:
    username: root
    url: jdbc:mysql://localhost:3306/uniqlo?useSSL=false
    password: password
  jpa:
    hibernate:
      ddl-auto: update # Hibernate ddl auto (create, create-drop, validate, update)
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1.0
  kafka:
    bootstrap-servers: http://localhost:9092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: event:com.uniqlo.orderservice.event.OrderPlacedEvent


eureka:
  client:
    service-url:
      defaultZone: http://localhost:9999/eureka

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      order: # Replace with your desired Circuit Breaker name
        registerHealthIndicator: true
        event-consumer-buffer-size: 10
        sliding-window-type: count_based
        slidingWindowSize: 5
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true

logging:
  level:
    org.hibernate.type: TRACE
    org.hibernate.SQL: DEBUG
    org.springframework.cloud.sleuth: DEBUG # Set the logging level for Sleuth
    org.springframework.cloud.sleuth.instrument.web: DEBUG # Set the logging level for Sleuth's web instrumentation
